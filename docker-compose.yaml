---
version: "3.8"

services:

  postgres:
    image: postgres:alpine
    platform: linux/amd64
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todo
    healthcheck:
      test: pg_isready -d todo -U postgres 
      interval: 5s
      timeout: 10s
      retries: 36
    ports:
      - "5432:5432"
    volumes:
      - .db/postgres:/var/lib/postgresql/data
    networks:
      todo:
        ipv4_address: 10.101.0.5

  db_migrate:
    image: todo-backend:latest
    platform: linux/amd64
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: todo db migrate
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: todo
      DB_PORT: 5432
      DB_MIGRATIONS_DIR: /opt/app/db/migrations
    networks:
      todo:
        ipv4_address: 10.101.0.4

  backend:
    image: todo-backend:latest
    platform: linux/amd64
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: backend
    environment:
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: todo
      DB_PORT: 5432
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/healthz"]
      interval: 5s
      timeout: 10s
      retries: 36
    depends_on:
      db_migrate:
        condition: service_completed_successfully
    networks:
      todo:
          ipv4_address: 10.101.0.10

  frontend:
    image: todo-frontend:latest
    platform: linux/amd64
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      REACT_APP_BACKEND_URL: http://localhost:8080
    depends_on:
        backend:
            condition: service_healthy
    networks:
      todo:
        ipv4_address: 10.101.0.20

networks:
  todo:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.101.0.0/16
